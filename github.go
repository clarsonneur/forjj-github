package main

// This file is autogenerated by "go generate". Do not modify it.
// It has been generated from your github.yaml file. To update this file, update the yaml file.
// then do "go generate"
// If the template is incorrect, you need to fork github.hpe.com/christophe-larsonneur/go-forjj and update cmd/genflags/main.go

import (
  "gopkg.in/alecthomas/kingpin.v2"
  "github.hpe.com/christophe-larsonneur/goforjj"
  "os"
  "fmt"
)

type githubApp struct {
    goforjj.ForjjPluginApp
}

var cliApp githubApp

func (a *githubApp)init() {
  a.App = kingpin.New("github", "Upstream github plugin for FORJJ. It properly configure github.com or entreprise with organisation/repos")
  a.App.Version("0.1")

  // true to create the Infra
  a.IsInfra = a.App.Flag("infra", "Used by upstream plugins to create initial repos.").Hidden().Bool()
  a.Flags = make(map[string]*string)
  a.Tasks = make(map[string]goforjj.PluginTask)
  a.Flags["forjj-infra"] = a.App.Flag("forjj-infra", "Name of the Infra repository to use").String()
  a.Flags["github-debug"] = a.App.Flag("github-debug", "To activate github debug information").String()


  a.Tasks["check"] = goforjj.PluginTask {
    Flags: make(map[string]*string),
    Cmd  : a.App.Command("check", ""),
  }

  a.Tasks["create"] = goforjj.PluginTask {
    Flags: make(map[string]*string),
    Cmd  : a.App.Command("create", ""),
  }
  a.Tasks["create"].Flags["forjj-organization"] = a.Tasks["create"].Cmd.Flag("forjj-organization", "Default FORJJ Organization. Used by default as github organization. If you want different, use --github-organization").String()
  a.Tasks["create"].Flags["github-organization"] = a.Tasks["create"].Cmd.Flag("github-organization", "Github Organization name. By default, it uses the FORJJ organization name").String()
  a.Tasks["create"].Flags["github-server"] = a.Tasks["create"].Cmd.Flag("github-server", "Github Entreprise Server name. By default, public 'github.com' API is used.").String()
  a.Tasks["create"].Flags["github-token"] = a.Tasks["create"].Cmd.Flag("github-token", "github token to access. This token must authorize organization level access.").Required().String()

  a.Tasks["maintain"] = goforjj.PluginTask {
    Flags: make(map[string]*string),
    Cmd  : a.App.Command("maintain", ""),
  }
  a.Tasks["maintain"].Flags["github-server"] = a.Tasks["maintain"].Cmd.Flag("github-server", "Github Entreprise Server name. By default, public 'github.com' API is used.").String()
  a.Tasks["maintain"].Flags["github-token"] = a.Tasks["maintain"].Cmd.Flag("github-token", "github token to access. This token must authorize organization level access.").Required().String()

  a.Tasks["update"] = goforjj.PluginTask {
    Flags: make(map[string]*string),
    Cmd  : a.App.Command("update", ""),
  }

}

func main() {
  cliApp.init()

  switch kingpin.MustParse(cliApp.App.Parse(os.Args[1:])) {
    case "check":
       cliApp.check()
    case "create":
       cliApp.create()
    case "maintain":
       cliApp.maintain()
    case "update":
       cliApp.update()
  }
}

const YamlDesc="---\n" +
   "plugin: \"github\"\n" +
   "version: \"0.1\"\n" +
   "description: \"Upstream github plugin for FORJJ. It properly configure github.com or entreprise with organisation/repos\"\n" +
   "flags:\n" +
   " common:\n" +
   "   flags:\n" +
   "   - forjj-infra:\n" +
   "       help: \"Name of the Infra repository to use\"\n" +
   "   - github-debug: \n" +
   "       help: \"To activate github debug information\"\n" +
   " create:\n" +
   "   help: \"Create the github environment to manage source and infra code.\"\n" +
   "   flags:\n" +
   "   - github-token:\n" +
   "       help: \"github token to access. This token must authorize organization level access.\"\n" +
   "       required: true\n" +
   "   - github-server:\n" +
   "       help: \"Github Entreprise Server name. By default, public 'github.com' API is used.\"\n" +
   "   - forjj-organization:\n" +
   "       help: \"Default FORJJ Organization. Used by default as github organization. If you want different, use --github-organization\"\n" +
   "   - github-organization:\n" +
   "       help: \"Github Organization name. By default, it uses the FORJJ organization name\"\n" +
   " update:\n" +
   "   help: \"Update the github infrastructure in the infra repository.\"\n" +
   " maintain:\n" +
   "   help: \"Maintain github infrastructure from the infra repository\"\n" +
   "   flags:\n" +
   "   - github-token:\n" +
   "       help: \"github token to access. This token must authorize organization level access.\"\n" +
   "       required: true\n" +
   "   - github-server:\n" +
   "       help: \"Github Entreprise Server name. By default, public 'github.com' API is used.\"\n" +
   ""

func ( *githubApp)check() {
  fmt.Printf("%s\n", YamlDesc)
}
